#######################
Web app with Firebase
#######################
Author: HanishKVC
Date: 20210428IST2332


Data sources
################

https://slusi.dacnet.nic.in/watershedatlas/list_of_state_abbreviation.htm

	List of state/ut abbreviations

data.gov.in

	Hospitals database


At Firebase site
####################

To use Firebase in a web app
=================================

Copy and paste these scripts into the bottom of your <body> tag, but before you use any Firebase services:


<!-- The core Firebase JS SDK is always required and must be listed first -->
<script src="/__/firebase/8.4.2/firebase-app.js"></script>

<!-- TODO: Add SDKs for Firebase products that you want to use
     https://firebase.google.com/docs/web/setup#available-libraries -->
<script src="/__/firebase/8.4.2/firebase-analytics.js"></script>

<!-- Initialize Firebase -->
<script src="/__/firebase/init.js"></script>


At Local machine
##################

Install NodeJS and NPM
========================

Debian's default NodeJS is 10 and there is a incompatibility between NPM and NodeJS in Deb10.

Trying to use node snap specified at nodejs.org also fails, with "/ has 'other' write 40777"

	sudo apt update
	sudo apt install snapd
	# In chromebook additionally need to install this
	sudo apt install libsquashfuse0 squashfuse fuse
	sudo snap install core
	sudo snap install node --classic

Had to install the lts binary packages for debian specified in nodejs.org

	wget https://deb.nodesource.com/setup_lts.x
	sudo bash setup_lts.x
	sudo apt install nodejs


Install Firebase CLI
======================

sudo npm install -g firebase-tools

This also modifies some files under /root/.npm among others. THought of using 'n' package in npm.
But its use didnt seem clean, so reverted and went back to installing firebase-tools directly as
a global package. NOTE: Remember to pass -g to uninstall also, otherwise it wont uninstall from
/usr/lib/node_modules.

There were some errors seen when installing, need to look at that later.


Use Firebase CLI
==================

NOTE: Best run these within the directory which will contain the files
related to the firebase project/app.

firebase login

firebase projects:list

firebase apps:list --project hosp-beds-covid-in

firebase init

firebase auth:export --format json tocheck/auth.export.json

Misc: sudo apt install openjdk-11-jre

firebase emulators:start

Misc: Add set modeline and syntax on to ~/.vimrc

Open a browser and load the local url specified when emulators got started.

Update public/index.html as required.

Update firestore.rules as required.

If you update firestore indexes configuration using firebase console online,
then use firebase firestore:indexes to retrieve the currently defined set of
indexes from the backend server and update the indexes configuration on the
local machine.


Create Admin tool
===================

NOTE: Run these npm commands in the directory which will contain the
project/program code/files.

npm init

	meta data for a new package/program is captured and saved.

npm install firebase-admin --save

	bring in the bazooka, to administer firebase applications.

Use Environment variables to either specify the service auth token and
or for targetting the local emulators, instead of the server.


JS and Firebase
=================


JS and its Multiple module mechanisms
---------------------------------------

THere is atleast two mechanisms, one may encounter normally, and these are
the relatively long lived CommonJS module and related mechanism along with
its require and the relatively new ECMA module mechanism along with its
import and export. It seems like Firebase has still not been updated to
support the newer ecma fully yet, in a stable way.




Status/Errors
---------------

By default the error/success messages from the asyncrounous database/fs
operations dont contain info as to what data/entity it relates to.
Use error.message to get atleast some idea about any error during
the async operations with firebase. Inturn to be able to map a async
error or success callback with the actual data entity, use the bind
mechanism available for functions to attach additional info/argument
on top of what the callback provides by default, thus having a super
changed callback with the original data as well as the additional
arguments if any one might specify.

On a casual glance, the minimal data about error wrt javascript (be it web
or nodejs) seems to be in admin.FirebaseError and or firebase.FirebaseError.


